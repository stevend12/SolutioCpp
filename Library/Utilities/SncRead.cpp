/******************************************************************************/
/*                                                                            */
/* Copyright 2020 Steven Dolly                                                */
/*                                                                            */
/* Licensed under the Apache License, Version 2.0 (the "License");            */
/* you may not use this file except in compliance with the License.           */
/* You may obtain a copy of the License at:                                   */
/*                                                                            */
/*     http://www.apache.org/licenses/LICENSE-2.0                             */
/*                                                                            */
/* Unless required by applicable law or agreed to in writing, software        */
/* distributed under the License is distributed on an "AS IS" BASIS,          */
/* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   */
/* See the License for the specific language governing permissions and        */
/* limitations under the License.                                             */
/*                                                                            */
/******************************************************************************/

////////////////////////////////////////////////////////////////////////////////
//                                                                            //
// SNC Read Function                                                          //
// (SncRead.cpp)                                                              //
//                                                                            //
// Steven Dolly                                                               //
// August 10, 2020                                                            //
//                                                                            //
// This is the main file for the function that reads files generated by SNC   //
// products (MapCHECK, ArcCHECK, etc.) and returns the dose as an image.      //
//                                                                            //
////////////////////////////////////////////////////////////////////////////////

#include "SncRead.hpp"

#include <fstream>
#include <sstream>

#include "FileIO.hpp"

namespace solutio
{
  GenericImage<double> SncRead(std::string file_name)
  {
    GenericImage<double> dose_image;
    std::vector<double> pixel_data;

    unsigned int n_rows = 0, n_cols = 0;
    double x0, y0, x1, y1, dx, dy, dose, v_max, v_min;

    std::string txt = "";
    std::ifstream fin(file_name.c_str());
    while(txt != "Dose Interpolated") std::getline(fin, txt);
    std::getline(fin, txt); std::getline(fin, txt);
    do
    {
      n_rows++;
      std::vector<std::string> elems = solutio::LineRead(txt, '\t');

      if(n_rows == 1)
      {
        std::stringstream(elems[0]) >> y0;
        std::stringstream(elems[2]) >> dose;
        v_min = v_max = dose;
        n_cols = elems.size() - 2;
      }
      if(n_rows == 2)
      {
        std::stringstream(elems[0]) >> y1;
        dy = y1 - y0;
      }

      for(int n = 2; n < elems.size(); n++)
      {
        std::stringstream(elems[n]) >> dose;
        if(dose < v_min) v_min = dose;
        if(dose > v_max) v_max = dose;
        pixel_data.push_back(dose);
      }
      std::getline(fin, txt);
    } while(txt.find("COL") == std::string::npos);

    std::getline(fin, txt);
    std::vector<std::string> elems = solutio::LineRead(txt, '\t');
    std::stringstream(elems[2]) >> x0;
    std::stringstream(elems[3]) >> x1;
    dx = x1 - x0;

    fin.close();

    dose_image.SetImageSize(n_rows, n_cols, 1, 1);
    dose_image.SetPixelDimensions(dx, dy, 0.0);
    dose_image.SetPixelOrigin(x0, y0, 0.0);
    dose_image.SetDirectionCosines(1.0, 0.0, 0.0, 0.0, -1.0, 0.0);
    dose_image.SetMaxValue(v_max);
    dose_image.SetMinValue(v_min);
    dose_image.SetImage(pixel_data);

    return dose_image;
  }
}
